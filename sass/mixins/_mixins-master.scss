// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Mobile First
@mixin mf-large-device {
  @media screen and (min-width: 1200px) {
    @content;
  }
}

@mixin mf-small-device {
  @media screen and (min-width: 1024px) {
    @content;
  }
}

@mixin mf-mobile-device {
  @media screen and (min-width: 768px) {
    @content;
  }
}

@mixin mf-mini-mobile-device {
  @media screen and (min-width: 480px) {
    @content;
  }
}

// Non-Mobile First

@mixin medium-device {
  @media screen and (max-width: 1199px) {
    @content;
  }
}

@mixin small-device {
  @media screen and (max-width: 1023px) {
    @content;
  }
}

@mixin mobile-device {
  @media screen and (max-width: 767px) {
    @content;
  }
}

@mixin mini-mobile-device {
  @media screen and (max-width: 479px) {
    @content;
  }
}

//Mixins for semi-transparent colors
@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

//CSS3 Transform Properties
@mixin prefix($property, $value, $vendors: webkit moz ms o) {
      @if $vendors {
        @each $vendor in $vendors {
          #{"-" + $vendor + "-" + $property}: #{$value};
        }
      }
      #{$property}: #{$value};
}

//Border Radius Mixing
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// Box Sizing
@mixin border-box{
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
       -o-box-sizing: border-box;
          box-sizing: border-box;
}

@mixin content-box{
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
      -ms-box-sizing: content-box;
       -o-box-sizing: content-box;
          box-sizing: content-box;
} 

// Transition
@mixin transition ($args...) {
  -webkit-transition: $args;
     -moz-transition: $args;
      -ms-transition: $args;
       -o-transition: $args;
          transition: $args;
}

// Box shadow
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
  -webkit-box-shadow: $top $left $blur $color #{$inset};
     -moz-box-shadow: $top $left $blur $color #{$inset};
      -ms-box-shadow: $top $left $blur $color #{$inset};
       -o-box-shadow: $top $left $blur $color #{$inset};
          box-shadow: $top $left $blur $color #{$inset};
}
